---
const pathname = Astro.url.pathname;

// Определяем текущую страницу для активного состояния кнопок
const isHomePage = pathname === "/" || pathname === "";
const isProjectsPage = pathname === "/projects" || pathname === "/projects/";
const isBlogPage = pathname.includes("/blog");
const isAboutPage = pathname === "/about" || pathname === "/about/";

// Определяем, находимся ли мы на внутренней странице
const isInnerPage = !isHomePage && (pathname.split('/').filter(Boolean).length > 1 || pathname.includes('/blog/'));

// Определяем, находимся ли мы на странице конкретного проекта
const isProjectDetailsPage = pathname.includes("/projects/") && pathname !== "/projects/";

// Определяем URL для кнопки "назад"
function getBackUrl() {
  const segments = pathname.split('/').filter(Boolean);
  if (segments.length <= 1) return '/';
  segments.pop();
  return '/' + segments.join('/');
}

const backUrl = getBackUrl();
---

<nav id="navbar" class={`fixed bottom-8 left-0 right-0 z-50 flex justify-center transition-opacity duration-300 ${isHomePage ? 'opacity-0 pointer-events-none' : 'opacity-100'}`}>
  <div class="navbar-container">
    <!-- Свернутое состояние (кнопка с иконкой меню) -->
    <div class="collapsed-nav">
      <button class="menu-button" id="mobile-menu-button">
        <svg width="22" height="24" viewBox="0 0 22 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <line x1="4.5" y1="9.5" x2="17.5" y2="9.5" stroke="rgba(0, 0, 0, 0.44)" stroke-width="1" class="icon-line"/>
          <line x1="4.5" y1="14.5" x2="17.5" y2="14.5" stroke="rgba(0, 0, 0, 0.44)" stroke-width="1" class="icon-line"/>
        </svg>
      </button>
    </div>
    
    <!-- Развернутое состояние (группа вкладок) -->
    <div class="expanded-nav">
    <a 
      href="/" 
        class={`nav-button ${isHomePage ? 'active' : ''}`}
    >
      Index
    </a>
    <a 
      href="/projects" 
        class={`nav-button ${isProjectsPage ? 'active' : ''}`}
    >
      Projects
    </a>
      <a 
        href="/blog" 
        class={`nav-button ${isBlogPage ? 'active' : ''}`}
      >
        Blog
      </a>
    <a 
      href="/about" 
        class={`nav-button ${isAboutPage ? 'active' : ''}`}
    >
      About
    </a>
    </div>
  </div>
</nav>

<!-- Мобильная навигация островок -->
<div id="mobile-nav-island" class="mobile-nav-island">
  <!-- Сам островок -->
  <div class="mobile-nav-content">
    <!-- Навигационные элементы -->
    <div class="mobile-nav-items">
      <a href="/" class="mobile-nav-item">
        <div class="mobile-nav-icon">
          <img src="/icons/surf-dog-updated.svg" alt="Index" />
        </div>
        <span class={`mobile-nav-text ${isHomePage ? 'active' : ''}`}>Index</span>
      </a>
      
      <a href="/projects" class="mobile-nav-item">
        <div class="mobile-nav-icon">
          <img src="/icons/scribble-updated.svg" alt="Projects" />
        </div>
        <span class={`mobile-nav-text ${isProjectsPage ? 'active' : ''}`}>Projects</span>
      </a>
      
      <a href="/blog" class="mobile-nav-item">
        <div class="mobile-nav-icon">
          <img src="/icons/book-updated.svg" alt="Blog" />
        </div>
        <span class={`mobile-nav-text ${isBlogPage ? 'active' : ''}`}>Blog</span>
      </a>
      
      <a href="/about" class="mobile-nav-item">
        <div class="mobile-nav-icon">
          <img src="/icons/mail-delivery-updated.svg" alt="About" />
        </div>
        <span class={`mobile-nav-text ${isAboutPage ? 'active' : ''}`}>About</span>
      </a>
    </div>
    
    <!-- Кнопка закрытия внутри островка -->
    <div class="mobile-nav-close-section">
      <button class="mobile-nav-close" id="mobile-nav-close">
        <svg width="22" height="24" viewBox="0 0 22 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M15.75 16.25L7.25 7.75" stroke="black" stroke-opacity="0.44" stroke-linecap="round"/>
          <path d="M7.25 16.25L15.75 7.75" stroke="black" stroke-opacity="0.44" stroke-linecap="round"/>
        </svg>
      </button>
    </div>
  </div>
</div>

<script is:inline>
  function initNavbar() {
    const navbar = document.getElementById('navbar');
    const footer = document.querySelector('footer');
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileNavIsland = document.getElementById('mobile-nav-island');
    const mobileNavClose = document.getElementById('mobile-nav-close');
    const isHomePage = window.location.pathname === "/" || window.location.pathname === "";
    
    if (!navbar || !footer) return;
    
    // Мобильная навигация
    if (mobileMenuButton && mobileNavIsland && mobileNavClose) {
      mobileMenuButton.addEventListener('click', () => {
        mobileNavIsland.classList.add('show');
      });
      
      mobileNavClose.addEventListener('click', () => {
        mobileNavIsland.classList.remove('show');
      });
      
      // Закрытие по клику вне островка
      mobileNavIsland.addEventListener('click', (e) => {
        if (e.target === mobileNavIsland) {
          mobileNavIsland.classList.remove('show');
        }
      });
    }
    
    // Переменная для проверки, вернулся ли пользователь с другой страницы
    let isReturningFromOtherPage = false;
    
    try {
      // Получаем текущее время
      const currentTime = new Date().getTime();
      
      // Получаем время последнего перехода между страницами
      const lastNavigationTime = parseInt(sessionStorage.getItem('lastNavigationTime') || '0');
      
      // Если мы не на главной, записываем время перехода
      if (!isHomePage) {
        sessionStorage.setItem('lastNavigationTime', currentTime.toString());
        sessionStorage.setItem('visitedNonHomePage', 'true');
      }
      
      // Проверяем, было ли недавно посещение другой страницы
      const timeDiff = currentTime - lastNavigationTime;
      isReturningFromOtherPage = timeDiff < 1000 && isHomePage && sessionStorage.getItem('visitedNonHomePage') === 'true';
      
      // Если пользователь обновил главную страницу (а не пришел с другой),
      // сбрасываем флаг посещения не главной страницы
      if (isHomePage && !isReturningFromOtherPage) {
        sessionStorage.removeItem('visitedNonHomePage');
      }
    } catch (e) {
      console.error('Error accessing sessionStorage:', e);
    }
    
    const handleScroll = () => {
      const footerRect = footer.getBoundingClientRect();
      const documentHeight = Math.max(
        document.body.scrollHeight,
        document.body.offsetHeight,
        document.documentElement.clientHeight,
        document.documentElement.scrollHeight,
        document.documentElement.offsetHeight
      );
      
      const viewportHeight = window.innerHeight;
      const hasScrollableContent = documentHeight > viewportHeight + 100;
      const footerVisible = footerRect.top < viewportHeight - 50;
      
      // На главной странице показываем навбар если пользователь прокрутил страницу
      // ИЛИ если пользователь вернулся с другой страницы сайта
      if (isHomePage) {
        if (window.scrollY > 10 || isReturningFromOtherPage) {
          navbar.classList.remove('opacity-0', 'pointer-events-none');
          navbar.classList.add('opacity-100');
        } else {
          navbar.classList.add('opacity-0', 'pointer-events-none');
          navbar.classList.remove('opacity-100');
        }
      } else {
        // На остальных страницах всегда показываем навбар
        navbar.classList.remove('opacity-0', 'pointer-events-none');
        navbar.classList.add('opacity-100');
      }
    };
    
    // Первичная проверка при загрузке страницы
    handleScroll();
    
    // Слушаем события
    window.addEventListener('scroll', handleScroll);
    window.addEventListener('resize', handleScroll);
  }
  
  // Инициализация
  document.addEventListener('DOMContentLoaded', initNavbar);
  document.addEventListener('astro:after-swap', initNavbar);
</script>

<style>
  .navbar-container {
    position: relative;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Свернутое состояние */
  .collapsed-nav {
    display: block;
    opacity: 1;
    pointer-events: auto;
    transition: opacity 0.2s ease-in-out;
  }
  
  .menu-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 62px;
    height: 34px;
    padding: 5px 20px;
    background: rgba(235, 235, 235, 0.4);
    backdrop-filter: blur(24px);
    border: none;
    border-radius: 9999px;
    color: rgb(7, 7, 7);
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    user-select: none;
    overflow: hidden;
    font-family: 'Die Grotesk B', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.5;
  }
  
  .menu-button:hover {
    background: rgba(235, 235, 235, 0.6);
  }
  
  /* Развернутое состояние */
  .expanded-nav {
    display: flex;
    gap: 2px;
    opacity: 0;
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    transition: opacity 0.2s ease-in-out;
    z-index: 10;
    background: rgba(235, 235, 235, 0.4);
    backdrop-filter: blur(24px);
    border-radius: 9999px;
    padding: 5px 6px;
    user-select: none;
    overflow: hidden;
  }
  
  .nav-button {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 34px;
    padding: 5px 20px;
    background: transparent;
    border: none;
    border-radius: 9999px;
    font-family: 'Die Grotesk B', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.5;
    text-decoration: none;
    color: rgb(7, 7, 7);
    transition: all 0.2s ease-in-out;
    white-space: nowrap;
  }
  
  .nav-button.active {
    background: rgba(7, 7, 7, 0.1);
    color: rgb(7, 7, 7);
  }
  
  .nav-button:hover {
    background: rgba(7, 7, 7, 0.05);
  }

  /* Стили для иконки */
  .icon-line {
    stroke: rgb(7, 7, 7);
  }
  
  /* Эффект разворачивания при ховере - ВАЖНО: должно быть после базовых стилей */
  .navbar-container:hover .collapsed-nav {
    opacity: 0;
    pointer-events: none;
  }
  
  .navbar-container:hover .expanded-nav {
    opacity: 1;
    pointer-events: auto;
  }
  
  /* Темная тема */
  @media (prefers-color-scheme: dark) {
    .menu-button {
      background: rgba(20, 20, 20, 0.4);
      color: rgb(248, 248, 248);
    }
    
    .menu-button:hover {
      background: rgba(20, 20, 20, 0.6);
    }
    
    .expanded-nav {
      background: rgba(20, 20, 20, 0.4);
    }

    .nav-button {
      color: rgb(248, 248, 248);
    }
    
    .nav-button.active {
      background: rgba(248, 248, 248, 0.1);
      color: rgb(248, 248, 248);
    }
    
    .nav-button:hover {
      background: rgba(248, 248, 248, 0.05);
    }
    
    .icon-line {
      stroke: rgb(248, 248, 248);
    }
  }

  :global(html.dark) .menu-button {
    background: rgba(20, 20, 20, 0.4);
    color: rgb(248, 248, 248);
  }
  
  :global(html.dark) .menu-button:hover {
    background: rgba(20, 20, 20, 0.6);
  }
  
  :global(html.dark) .expanded-nav {
    background: rgba(20, 20, 20, 0.4);
  }

  :global(html.dark) .nav-button {
    color: rgb(248, 248, 248);
  }
  
  :global(html.dark) .nav-button.active {
    background: rgba(248, 248, 248, 0.1);
    color: rgb(248, 248, 248);
  }
  
  :global(html.dark) .nav-button:hover {
    background: rgba(248, 248, 248, 0.05);
  }
  
  :global(html.dark) .icon-line {
    stroke: rgb(248, 248, 248);
  }
  
  /* На мобильных скрываем desktop hover функциональность */
  @media (max-width: 480px) {
    .expanded-nav {
      display: none !important;
    }
    
    .collapsed-nav {
      display: block !important;
    }
    
    .navbar-container:hover .collapsed-nav {
      opacity: 1 !important;
      pointer-events: auto !important;
    }
    
    .navbar-container:hover .expanded-nav {
      opacity: 0 !important;
      pointer-events: none !important;
    }
  }
  
  /* Мобильная навигация островок */
  .mobile-nav-island {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 60;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .mobile-nav-island.show {
    opacity: 1;
    pointer-events: auto;
  }
  
  .mobile-nav-content {
    position: absolute;
    bottom: 24px;
    left: 24px;
    right: 24px;
    background: rgba(235, 235, 235, 0.4);
    backdrop-filter: blur(0px);
    border-radius: 30px;
    padding: 16px 16px 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 16px;
    transform: scale(0.95);
    filter: blur(12px);
    transition: backdrop-filter 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
                transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),
                filter 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .mobile-nav-island.show .mobile-nav-content {
    backdrop-filter: blur(24px);
    transform: scale(1);
    filter: blur(0px);
  }
  
  .mobile-nav-items {
    display: flex;
    align-items: center;
    gap: 16px;
  }
  
  .mobile-nav-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 4px;
    width: 60px;
    text-decoration: none;
    opacity: 0;
    transform: translateY(8px);
    transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
                transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Staggered animation для элементов меню */
  .mobile-nav-island.show .mobile-nav-item:nth-child(1) {
    opacity: 1;
    transform: translateY(0);
    transition-delay: 0.1s;
  }
  
  .mobile-nav-island.show .mobile-nav-item:nth-child(2) {
    opacity: 1;
    transform: translateY(0);
    transition-delay: 0.15s;
  }
  
  .mobile-nav-island.show .mobile-nav-item:nth-child(3) {
    opacity: 1;
    transform: translateY(0);
    transition-delay: 0.2s;
  }
  
  .mobile-nav-island.show .mobile-nav-item:nth-child(4) {
    opacity: 1;
    transform: translateY(0);
    transition-delay: 0.25s;
  }
  
  .mobile-nav-icon {
    width: 60px;
    height: 60px;
    border-radius: 14px;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .mobile-nav-item:hover .mobile-nav-icon {
    transform: scale(1.05);
  }
  
  .mobile-nav-icon img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
  
  .mobile-nav-text {
    font-family: 'Die Grotesk B', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.5;
    text-align: center;
    color: rgba(0, 0, 0, 0.44);
    width: 100%;
    transition: color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .mobile-nav-text.active {
    color: #000000;
  }
  
  .mobile-nav-close-section {
    display: flex;
    flex-direction: column;
    gap: 10px;
    padding: 0px 0px 16px;
    width: 100%;
    align-items: center;
    opacity: 0;
    transform: translateY(8px);
    transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
                transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .mobile-nav-island.show .mobile-nav-close-section {
    opacity: 1;
    transform: translateY(0);
    transition-delay: 0.3s;
  }
  
  .mobile-nav-close {
    background: rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(16px);
    border: none;
    border-radius: 999px;
    padding: 5px 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    width: 62px;
    height: 34px;
  }
  
  .mobile-nav-close:hover {
    background: rgba(0, 0, 0, 0.15);
    transform: scale(1.05);
  }
  
  /* Показываем мобильную навигацию только на маленьких экранах */
  @media (min-width: 481px) {
    .mobile-nav-island {
      display: none;
    }
  }
  
  /* Темная тема для мобильной навигации */
  @media (prefers-color-scheme: dark) {
    .mobile-nav-content {
      background: rgba(20, 20, 20, 0.4);
    }
    
    .mobile-nav-close {
      background: rgba(255, 255, 255, 0.1);
    }
    
    .mobile-nav-close:hover {
      background: rgba(255, 255, 255, 0.15);
      transform: scale(1.05);
    }
    
    .mobile-nav-close svg path {
      stroke: rgba(255, 255, 255, 0.44);
    }
    
    .mobile-nav-text {
      color: rgba(255, 255, 255, 0.44);
    }
    
    .mobile-nav-text.active {
      color: #ffffff;
    }
  }
  
  :global(html.dark) .mobile-nav-content {
    background: rgba(20, 20, 20, 0.4);
  }
  
  :global(html.dark) .mobile-nav-close {
    background: rgba(255, 255, 255, 0.1);
  }
  
  :global(html.dark) .mobile-nav-close:hover {
    background: rgba(255, 255, 255, 0.15);
    transform: scale(1.05);
  }
  
  :global(html.dark) .mobile-nav-close svg path {
    stroke: rgba(255, 255, 255, 0.44);
  }
  
  :global(html.dark) .mobile-nav-text {
    color: rgba(255, 255, 255, 0.44);
  }
  
  :global(html.dark) .mobile-nav-text.active {
    color: #ffffff;
  }
</style> 