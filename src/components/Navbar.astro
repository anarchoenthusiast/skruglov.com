---
const pathname = Astro.url.pathname;

// Определяем текущую страницу для активного состояния кнопок
const isHomePage = pathname === "/" || pathname === "";
const isProjectsPage = pathname === "/projects" || pathname === "/projects/";
const isBlogPage = pathname.includes("/blog");
const isAboutPage = pathname === "/about" || pathname === "/about/";

// Определяем, находимся ли мы на внутренней странице
const isInnerPage = !isHomePage && (pathname.split('/').filter(Boolean).length > 1 || pathname.includes('/blog/'));

// Определяем, находимся ли мы на странице конкретного проекта
const isProjectDetailsPage = pathname.includes("/projects/") && pathname !== "/projects/";

// Определяем URL для кнопки "назад"
function getBackUrl() {
  const segments = pathname.split('/').filter(Boolean);
  if (segments.length <= 1) return '/';
  segments.pop();
  return '/' + segments.join('/');
}

const backUrl = getBackUrl();
---

<nav id="navbar" class={`fixed bottom-8 left-0 right-0 z-50 flex justify-center transition-opacity duration-300 ${isHomePage ? 'opacity-0 pointer-events-none' : 'opacity-100'}`}>
  <div class="navbar-container">
    <!-- Свернутое состояние (кнопка с иконкой меню) -->
    <div class="collapsed-nav">
      <button class="menu-button">
        <svg width="22" height="24" viewBox="0 0 22 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <line x1="4.5" y1="9.5" x2="17.5" y2="9.5" stroke="rgba(0, 0, 0, 0.44)" stroke-width="1" class="icon-line"/>
          <line x1="4.5" y1="14.5" x2="17.5" y2="14.5" stroke="rgba(0, 0, 0, 0.44)" stroke-width="1" class="icon-line"/>
        </svg>
      </button>
    </div>
    
    <!-- Развернутое состояние (группа вкладок) -->
    <div class="expanded-nav">
      <a 
        href="/" 
        class={`nav-button ${isHomePage ? 'active' : ''}`}
      >
        Index
      </a>
      <a 
        href="/projects" 
        class={`nav-button ${isProjectsPage ? 'active' : ''}`}
      >
        Projects
      </a>
      <a 
        href="/blog" 
        class={`nav-button ${isBlogPage ? 'active' : ''}`}
      >
        Blog
      </a>
      <a 
        href="/about" 
        class={`nav-button ${isAboutPage ? 'active' : ''}`}
      >
        About
      </a>
    </div>
  </div>
</nav>

<script is:inline>
  function initNavbar() {
    const navbar = document.getElementById('navbar');
    const footer = document.querySelector('footer');
    const isHomePage = window.location.pathname === "/" || window.location.pathname === "";
    
    if (!navbar || !footer) return;
    
    // Переменная для проверки, вернулся ли пользователь с другой страницы
    let isReturningFromOtherPage = false;
    
    try {
      // Получаем текущее время
      const currentTime = new Date().getTime();
      
      // Получаем время последнего перехода между страницами
      const lastNavigationTime = parseInt(sessionStorage.getItem('lastNavigationTime') || '0');
      
      // Если мы не на главной, записываем время перехода
      if (!isHomePage) {
        sessionStorage.setItem('lastNavigationTime', currentTime.toString());
        sessionStorage.setItem('visitedNonHomePage', 'true');
      }
      
      // Проверяем, было ли недавно посещение другой страницы
      const timeDiff = currentTime - lastNavigationTime;
      isReturningFromOtherPage = timeDiff < 1000 && isHomePage && sessionStorage.getItem('visitedNonHomePage') === 'true';
      
      // Если пользователь обновил главную страницу (а не пришел с другой),
      // сбрасываем флаг посещения не главной страницы
      if (isHomePage && !isReturningFromOtherPage) {
        sessionStorage.removeItem('visitedNonHomePage');
      }
    } catch (e) {
      console.error('Error accessing sessionStorage:', e);
    }
    
    const handleScroll = () => {
      const footerRect = footer.getBoundingClientRect();
      const documentHeight = Math.max(
        document.body.scrollHeight,
        document.body.offsetHeight,
        document.documentElement.clientHeight,
        document.documentElement.scrollHeight,
        document.documentElement.offsetHeight
      );
      
      const viewportHeight = window.innerHeight;
      const hasScrollableContent = documentHeight > viewportHeight + 100;
      const footerVisible = footerRect.top < viewportHeight - 50;
      
      // На главной странице показываем навбар если пользователь прокрутил страницу
      // ИЛИ если пользователь вернулся с другой страницы сайта
      if (isHomePage) {
        if ((window.scrollY > 10 || isReturningFromOtherPage) && (!footerVisible || !hasScrollableContent)) {
          navbar.classList.remove('opacity-0', 'pointer-events-none');
          navbar.classList.add('opacity-100');
        } else {
          navbar.classList.add('opacity-0', 'pointer-events-none');
          navbar.classList.remove('opacity-100');
        }
      } else {
        // На остальных страницах скрываем только при достижении футера
        if (footerVisible && hasScrollableContent) {
          navbar.classList.add('opacity-0', 'pointer-events-none');
          navbar.classList.remove('opacity-100');
        } else {
          navbar.classList.remove('opacity-0', 'pointer-events-none');
          navbar.classList.add('opacity-100');
        }
      }
    };
    
    // Первичная проверка при загрузке страницы
    handleScroll();
    
    // Слушаем события
    window.addEventListener('scroll', handleScroll);
    window.addEventListener('resize', handleScroll);
  }
  
  // Инициализация
  document.addEventListener('DOMContentLoaded', initNavbar);
  document.addEventListener('astro:after-swap', initNavbar);
</script>

<style>
  .navbar-container {
    position: relative;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Свернутое состояние */
  .collapsed-nav {
    display: block;
    opacity: 1;
    pointer-events: auto;
    transition: opacity 0.2s ease-in-out;
  }
  
  .menu-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 62px;
    height: 34px;
    padding: 5px 20px;
    background: rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(8px);
    border: none;
    border-radius: 999px;
    color: rgba(0, 0, 0, 0.44);
    cursor: pointer;
    transition: all 0.2s ease-in-out;
  }
  
  .menu-button:hover {
    background: rgba(0, 0, 0, 0.15);
  }
  
  /* Развернутое состояние */
  .expanded-nav {
    display: flex;
    gap: 2px;
    opacity: 0;
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    transition: opacity 0.2s ease-in-out;
    z-index: 10;
  }
  
  .nav-button {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 34px;
    padding: 5px 20px;
    background: rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(8px);
    border-radius: 999px;
    font-family: 'Die Grotesk B', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.5;
    text-decoration: none;
    color: rgba(0, 0, 0, 0.44);
    transition: all 0.2s ease-in-out;
    white-space: nowrap;
  }
  
  .nav-button.active {
    color: #000000;
  }
  
  .nav-button:hover {
    background: rgba(0, 0, 0, 0.15);
  }
  
  /* Стили для иконки */
  .icon-line {
    stroke: rgba(0, 0, 0, 0.44);
  }
  
  /* Эффект разворачивания при ховере - ВАЖНО: должно быть после базовых стилей */
  .navbar-container:hover .collapsed-nav {
    opacity: 0;
    pointer-events: none;
  }
  
  .navbar-container:hover .expanded-nav {
    opacity: 1;
    pointer-events: auto;
  }
  
  /* Темная тема */
  @media (prefers-color-scheme: dark) {
    .menu-button {
      background: rgba(255, 255, 255, 0.1);
      color: rgba(255, 255, 255, 0.44);
    }
    
    .menu-button:hover {
      background: rgba(255, 255, 255, 0.15);
    }
    
    .nav-button {
      background: rgba(255, 255, 255, 0.1);
      color: rgba(255, 255, 255, 0.44);
    }
    
    .nav-button.active {
      color: #ffffff;
    }
    
    .nav-button:hover {
      background: rgba(255, 255, 255, 0.15);
    }
    
    .icon-line {
      stroke: rgba(255, 255, 255, 0.44);
    }
  }
  
  :global(html.dark) .menu-button {
    background: rgba(255, 255, 255, 0.1);
    color: rgba(255, 255, 255, 0.44);
  }
  
  :global(html.dark) .menu-button:hover {
    background: rgba(255, 255, 255, 0.15);
  }
  
  :global(html.dark) .nav-button {
    background: rgba(255, 255, 255, 0.1);
    color: rgba(255, 255, 255, 0.44);
  }
  
  :global(html.dark) .nav-button.active {
    color: #ffffff;
  }
  
  :global(html.dark) .nav-button:hover {
    background: rgba(255, 255, 255, 0.15);
  }
  
  :global(html.dark) .icon-line {
    stroke: rgba(255, 255, 255, 0.44);
  }
  
  /* Отключаем развернутое меню только на очень маленьких экранах (телефоны) */
  @media (max-width: 480px) {
    .navbar-container:hover .collapsed-nav {
      opacity: 1 !important;
      pointer-events: auto !important;
    }
    
    .navbar-container:hover .expanded-nav {
      opacity: 0 !important;
      pointer-events: none !important;
    }
  }
</style> 