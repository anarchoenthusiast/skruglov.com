---
interface Props {
  items: {
    label: string;
    url?: string;
  }[];
  showLastItem?: boolean;
}

const { items, showLastItem = false } = Astro.props;

// Получаем текущий путь для стилизации
const currentPath = Astro.url.pathname;

// Имя автора для использования в проверках
const authorName = "Sergey Kruglov";

// Определяем тип страницы на основе пути
const isProjectDetailPage = currentPath.includes('/projects/') && currentPath !== '/projects' && currentPath !== '/projects/';
const isBlogPostPage = currentPath.includes('/blog/') && currentPath !== '/blog' && currentPath !== '/blog/';

// Определяем, какие элементы показывать на десктопе
const displayedItems = (isProjectDetailPage || isBlogPostPage || showLastItem) ? items : items.slice(0, -1);

// Для мобильной версии: показываем все элементы кроме последнего для страниц 3-го уровня
const mobileDisplayedItems = (isProjectDetailPage || isBlogPostPage) ? items.slice(0, -1) : displayedItems;

// Функция для сокращения заголовка блога до первых двух слов
function shortenBlogTitle(title: string): string {
  const words = title.split(' ');
  if (words.length <= 2) return title;
  return words.slice(0, 2).join(' ') + '...';
}
---

<div class="flex items-center gap-2">
  <!-- Мобильная версия: без названий проектов/постов -->
  <div class="block md:hidden">
    {mobileDisplayedItems.map((item, index) => (
      <>
        {index > 0 && <span class="text-black/50 dark:text-white/50">/</span>}
        {item.url ? (
          <a 
            href={item.url} 
            class="font-medium text-black dark:text-white hover:opacity-80 transition-opacity"
          >
            {item.label === "Sergei Kruglov" ? authorName : item.label}
          </a>
        ) : (
          <span class="text-black/44 dark:text-white/44">
            {item.label === "Sergei Kruglov" ? authorName : item.label}
          </span>
        )}
      </>
    ))}
  </div>

  <!-- Десктопная версия: полный breadcrumb -->
  <div class="hidden md:flex items-center gap-2">
    {displayedItems.map((item, index) => (
      <>
        {index > 0 && <span class="text-black/50 dark:text-white/50">/</span>}
        {item.url ? (
          <a 
            href={item.url} 
            class="font-medium text-black dark:text-white hover:opacity-80 transition-opacity"
          >
            {item.label === "Sergei Kruglov" ? authorName : item.label}
          </a>
        ) : (
          <span class="text-black/44 dark:text-white/44">
            {(isBlogPostPage && index === displayedItems.length - 1) ? shortenBlogTitle(item.label) : (item.label === "Sergei Kruglov" ? authorName : item.label)}
          </span>
        )}
      </>
    ))}
  </div>
</div> 